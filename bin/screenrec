#!/usr/bin/env bash
set -euo pipefail

STATE_DIR="${XDG_STATE_HOME:-$HOME/.local/state}/screenrec"
CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/screenrec"
VIDEO_DIR="${XDG_VIDEOS_DIR:-$HOME/Videos}"
PID_FILE="$STATE_DIR/wl-screenrec.pid"
META_FILE="$STATE_DIR/recording.json"

mkdir -p "$STATE_DIR" "$CACHE_DIR" "$VIDEO_DIR"

CONTAINER="mp4"             # change to mkv/webm if you like
VIDEO_NAME_PREFIX="screenrec"
AUDIO_ARGS=()               # e.g. AUDIO_ARGS=(--audio) if your build supports it
EXTRA_ARGS=()               # any extra args for your build

signal_waybar() { pkill -x -SIGRTMIN+8 waybar 2>/dev/null || true; }

is_running() {
  [[ -f "$PID_FILE" ]] && ps -p "$(cat "$PID_FILE")" >/dev/null 2>&1
}

stop_recording() {
  if is_running; then
    kill -INT "$(cat "$PID_FILE")" 2>/dev/null || true
    for _ in {1..20}; do is_running || break; sleep 0.1; done
  fi
  rm -f "$PID_FILE" "$META_FILE"
  signal_waybar
}

# ---------- capability detection ----------
has_arg() { wl-screenrec --help 2>&1 | grep -q -- "$1"; }
FILENAME_FLAG="--filename"
has_arg "$FILENAME_FLAG" || FILENAME_FLAG="--file"

LOW_POWER_FLAG=""
has_arg "--low-power" && LOW_POWER_FLAG="--low-power"

GEOM_TAKES_SLURP=1   # modern builds accept slurp "x,y WxH"; if yours needs WxH+X+Y, set to 0

# ---------- start ----------
start_recording() {
  ts="$(date +'%Y-%m-%d_%H-%M-%S')"
  outfile="$VIDEO_DIR/${VIDEO_NAME_PREFIX}_${ts}.${CONTAINER}"

  # Region
  GEOM_ARG=()
  if command -v slurp >/dev/null 2>&1; then
    sel="$(slurp)" || true
    if [[ -n "${sel:-}" ]]; then
      if [[ "$GEOM_TAKES_SLURP" -eq 1 ]]; then
        GEOM_ARG=(--geometry "$sel")
      else
        # convert "x,y WxH" -> "WxH+X+Y"
        IFS=' ' read -r xy wh <<<"$sel"
        x="${xy%,*}"; y="${xy#*,}"
        w="${wh%x*}"; h="${wh#*x}"
        GEOM_ARG=(--geometry "${w}x${h}+${x}+${y}")
      fi
    fi
  fi

  # Try sequence:
  # 1) with low-power=off (if supported)
  # 2) with low-power=on (if supported) â€” some builds only accept true/false
  # 3) without any low-power flag
  try_start() {
    wl-screenrec "${GEOM_ARG[@]}" "${AUDIO_ARGS[@]}" "${EXTRA_ARGS[@]}" "$@" $FILENAME_FLAG "$outfile" &
    pid=$!
    echo "$pid" > "$PID_FILE"
    printf '{"file":"%s","started_at":"%s"}\n' "$outfile" "$(date --iso-8601=seconds)" > "$META_FILE"
    signal_waybar
    sleep 0.5
    ps -p "$pid" >/dev/null 2>&1
  }

  if [[ -n "$LOW_POWER_FLAG" ]]; then
    if try_start "$LOW_POWER_FLAG=off"; then return 0; fi
    rm -f "$PID_FILE" "$META_FILE"
    if try_start "$LOW_POWER_FLAG=on"; then return 0; fi
    rm -f "$PID_FILE" "$META_FILE"
  fi

  if try_start; then return 0; fi

  echo "Error: wl-screenrec failed to start (checked filename flag and low-power variations)." >&2
  signal_waybar
  exit 1
}

case "${1:-}" in
  start)
    if is_running; then
      echo "Already recording (PID $(cat "$PID_FILE"))." >&2
      exit 0
    fi
    start_recording
    ;;
  stop)
    stop_recording
    ;;
  toggle-stop)
    if is_running; then stop_recording; fi
    ;;
  *)
    echo "Usage: $0 {start|stop|toggle-stop}"
    exit 2
    ;;
esac